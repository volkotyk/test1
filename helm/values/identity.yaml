keycloak:
  existingSecret: keycloak-http
  existingSecretKey: password
  extraEnv: |
    - name: KEYCLOAK_RABBITMQ_HOST
      value: "{{ .Release.Name }}-rabbitmq"
    - name: KEYCLOAK_RABBITMQ_PASSWORD
      valueFrom:
        secretKeyRef:
          key: rabbitmq-password
          name: rabbitmq
    - name: KEYCLOAK_RABBITMQ_USERNAME
      valueFrom:
        secretKeyRef:
          key: rabbitmq-username
          name: rabbitmq
  extraInitContainers: |-
    - name: theme-provider
      image: gcr.io/favedom-dev/peeq-fan-keycloak-theme:0.0.84
      imagePullPolicy: IfNotPresent
      command:
        - sh
      args:
        - -c
        - |
          echo "Copying theme..."
          cp -R /theme/* /peeq-fan
      volumeMounts:
        - name: peeq-fan
          mountPath: /peeq-fan
    - name: theme-provider-celeb
      image: gcr.io/favedom-dev/peeq-celeb-keycloak-theme:0.0.99
      imagePullPolicy: IfNotPresent
      command:
        - sh
      args:
        - -c
        - |
          echo "Copying theme..."
          cp -R /theme/* /peeq-celeb
      volumeMounts:
        - name: peeq-celeb
          mountPath: /peeq-celeb
    - name: theme-provider-handler
      image: gcr.io/favedom-dev/peeq-handler-keycloak-theme:0.0.5
      imagePullPolicy: IfNotPresent
      command:
        - sh
      args:
        - -c
        - |
          echo "Copying theme..."
          cp -R /theme/* /peeq-handler
      volumeMounts:
        - name: peeq-handler
          mountPath: /peeq-handler
  extraVolumeMounts: |-
    - name: peeq-fan
      mountPath: /opt/jboss/keycloak/themes/peeq-fan
    - name: peeq-celeb
      mountPath: /opt/jboss/keycloak/themes/peeq-celeb
    - name: peeq-handler
      mountPath: /opt/jboss/keycloak/themes/peeq-handler
  extraVolumes: |-
    - name: peeq-fan
      emptyDir: {}
    - name: peeq-celeb
      emptyDir: {}
    - name: peeq-handler
      emptyDir: {}
  image:
    repository: gcr.io/favedom-dev/peeq-keycloak
    tag: 0.0.6
  ingress:
    enabled: false
  persistence:
    dbVendor: postgres
    deployPostgres: true
    existingSecretPasswordKey: postgresql-password
  service:
    annotations:
      fabric8.io/expose: "true"
      fabric8.io/host.name: identity
      fabric8.io/ingress.annotations: |-
        kubernetes.io/ingress.class: nginx
        nginx.ingress.kubernetes.io/proxy-buffer-size: 16k
        nginx.ingress.kubernetes.io/affinity: cookie
      fabric8.io/ingress.path: /
  postgresql:
    existingSecret: jx-staging-postgresql
    persistence:
      enabled: true
